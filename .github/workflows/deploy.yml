name: Deploy Astro Site

on:
  push:
    branches:
      - main  # Triggers deployment when changes are pushed to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the GitHub repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub username
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Docker Hub token

      # Step 4: Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .  # Current directory, where the Dockerfile and project exist
          file: ./Dockerfile
          push: true
          tags: ulvihas/astroresume:latest  # Your Docker image tag

      # Step 5: Set up SSH key for server access (SSH private key stored as a secret)
      - name: Set up SSH key for server access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/vultr  # Remove carriage returns
          chmod 600 ~/.ssh/vultr
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/vultr
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts  # Avoid SSH prompts

      # Step 6: Debug SSH Setup (optional, remove if not needed)
      - name: Debug SSH Setup
        run: ls -la ~/.ssh

      # Step 7: SSH into the server and deploy the Docker container
      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/vultr root@${{ secrets.SERVER_IP }} << 'EOF'
            # Pull the latest Docker image from Docker Hub
            docker pull ulvihas/astroresume:latest

            # Stop and remove the old container (if exists)
            docker stop astro-container || true
            docker rm astro-container || true

            # Run the new container with port 80 exposed
            docker run -d --name astro-container -p 80:80 ulvihas/astroresume:latest
          EOF
