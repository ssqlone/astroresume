name: Deploy Astro Site

on:
  push:
    branches:
      - main  # Triggers deployment when pushing to 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Pull the latest code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3Ô∏è‚É£ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub username
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Docker Hub token

      # 4Ô∏è‚É£ Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .  # Use current directory
          file: ./Dockerfile  # Specify Dockerfile
          push: true
          tags: ulvihas/astroresume:latest  # Image tag

      # 5Ô∏è‚É£ Set up SSH key for server access
      - name: Set up SSH key for server access
        run: |
          set -e  # Exit if any command fails
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/vultr  # Save key
          chmod 600 ~/.ssh/vultr  # Secure file permissions
          eval "$(ssh-agent -s)"  # Start SSH agent
          ssh-add ~/.ssh/vultr  # Add key to agent
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts  # Avoid SSH prompts

      # 6Ô∏è‚É£ Debug SSH Setup (Check if the key is added)
      - name: Debug SSH Key
        run: ssh-add -l  # List loaded SSH keys

      # 7Ô∏è‚É£ Debug SSH Setup (Check if the file exists)
      - name: Check SSH Key File
        run: ls -la ~/.ssh  # List files in .ssh directory

      # 8Ô∏è‚É£ Debug SSH Key Contents (Safe Check)
      - name: Show SSH Key in GitHub Runner
        run: cat ~/.ssh/vultr  # Print key (DO NOT DO THIS IN PRODUCTION)

      # 9Ô∏è‚É£ Debug SSH Connection (Verbose Output)
      - name: Test SSH Connection
        run: ssh -vvv -o StrictHostKeyChecking=no -i ~/.ssh/vultr root@${{ secrets.SERVER_IP }} exit

      # üîü Deploy to server via SSH
      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/vultr root@${{ secrets.SERVER_IP }} << 'EOF'
            # Pull the latest Docker image from Docker Hub
            docker pull ulvihas/astroresume:latest

            # Stop and remove the old container (if exists)
            docker stop astro-container || true
            docker rm astro-container || true

            # Run the new container with port 80 exposed
            docker run -d --name astro-container -p 80:80 ulvihas/astroresume:latest
          EOF
